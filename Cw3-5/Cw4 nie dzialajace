import numpy as np
import matplotlib.animation as animation
import matplotlib.pyplot as plt
from math import atan,pi,log,sqrt

L = np.zeros((250,500))
#gestosc tla
gest = 3500
#gestosc cial rudnych 
gest_tlo = 5500

tlo = L.copy()

tlo[:] = gest

indeksy = np.random.choice(np.size(L), 3, replace=False)
#3 wylosowane liczby 
print(indeksy)
kordy = [(index // 250, index % 500) for index in indeksy]
print(f"Wspolrzedne srodkow zaburzen {kordy}")

promien = 50

for x,y in kordy:
    print(x,y)
    for i in range(max(1, x - promien), min(250, x + promien + 1)):
        for j in range(max(1, y - promien), min(500, y + promien + 1)):
            if (i-x)**2+(j-y)**2 <= promien**2:
                tlo[i,j] = gest_tlo


stala_graw = 6.67e-11

g=[]

def getR(i,j,k):
    if(k==j):
        return i
    if(k<j):
        przek = k - j
        return sqrt(i**2 + (przek**2))
    if(k>j):
        przek = j - k
        return sqrt(i**2 + (przek**2))
            


def getAngle(i,j,k):    
    if(k==j):
        return 90
    if(k<j):
         return (atan(i/(j-k)/pi)*180) 
    if(k>j):
        return (atan(i/(k-j)/pi)*180)
    
def grawitacja(tlo):
    for k in range(100,400,1): #odleglosc miedzy wezlami
        suma = 0
        for i in range(1,250):
            for j in range(1,500):
                beta = (i+1-i)/(j+1-j)

                r1 = getR(j,i+1, k)
                r = getR(j,i,k)
                
                z = r1/r
                logarytm = log(z)
                a = getAngle(j,i,k)
                a1 = getAngle(j,i+1, k)

                suma = suma + (tlo[i,j] * beta * (logarytm - (a-a1)))
        g.append(2*stala_graw*suma)
    return g
                

plt.imshow(tlo, cmap='hot_r')
plt.colorbar()
plt.title("Gdzie występuje zaburzenie", loc = 'center', fontname = 'serif')
plt.show()

# Obliczenie wartości g
grawitacja(tlo)

# Tworzenie wykresu
plt.figure(figsize=(10, 5))
plt.plot(range(100, 400), g, label="Grawitacja", color="b")
plt.xlabel("Pozycja k")
plt.ylabel("Grawitacja g")
plt.title("Zmiana wartości grawitacji w zależności od pozycji")
plt.legend()
plt.grid()
plt.show()
