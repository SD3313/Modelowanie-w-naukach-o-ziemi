import matplotlib
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation
import random
from scipy.stats import levy
from scipy.stats import binom
from IPython.display import HTML


L = np.zeros((100, 100))
Lnew = np.zeros((100, 100))

data = []

pos = [50, 50]
L[pos[0], pos[1]] = 1




def laplace(L,Lnew):
   
    for k in range(1,1001):
        
        Lnew[1:99, 1:99] = 0.25 * (L[:-2, 1:99] + L[2: , 1:99] + L[1:99, :-2] + L[1:99,2:])

        if 3 < pos[0] < 97 and 3 < pos[1] < 97:
            los = random.randrange(1,9)
            movement(los)
        else:
            if pos[0] & pos[1] < 3:
                los = random.randrange(5,7)
                movement(los)
            else:
                los = random.randrange(1, 3)
                movement(los)
        Lnew[pos[0], pos[1]] = 1

        data.append(Lnew.copy())  
        L[:] = Lnew 

    return(data)




def movement(los):

    m = random.randrange(1,3)


    match los:
        case 1:
            pos[0] -= m
        case 2:
            pos[0] -= m
            pos[1] -= m
        case 3:
            pos[1] -= m
        case 4:
            pos[0] += m
            pos[1] -= m
        case 5:
            pos[0] += m
        case 6:
            pos[0] += m
            pos[1] += m
        case 7:
            pos[1] += m
        case 8:
            pos[0] -= m
            pos[1] += m



data=laplace(L,Lnew)


fig, ax = plt.subplots()
mat = ax.matshow(data[0], cmap='hot')

def update(frame):

    mat.set_array(data[frame])
    return [mat]


ani = animation.FuncAnimation(fig, update, frames=range(0, len(data), 10), interval=100, repeat=False)

HTML(ani.to_jshtml())
